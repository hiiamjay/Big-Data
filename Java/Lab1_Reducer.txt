{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // Importing libraries \
import java.io.IOException; \
import java.util.Iterator; \
import org.apache.hadoop.io.IntWritable; \
import org.apache.hadoop.io.Text; \
import org.apache.hadoop.mapred.MapReduceBase; \
import org.apache.hadoop.mapred.OutputCollector; \
import org.apache.hadoop.mapred.Reducer; \
import org.apache.hadoop.mapred.Reporter; \
\
public class WCReducer extends MapReduceBase implements Reducer<Text, \
									IntWritable, Text, IntWritable> \{ \
\
	// Reduce function \
	public void reduce(Text key, Iterator<IntWritable> value, \
				OutputCollector<Text, IntWritable> output, \
							Reporter rep) throws IOException \
	\{ \
\
		int count = 0; \
\
		// Counting the frequency of each words \
		while (value.hasNext()) \
		\{ \
			IntWritable i = value.next(); \
			count += i.get(); \
		\} \
\
		output.collect(key, new IntWritable(count)); \
	\} \
\} }